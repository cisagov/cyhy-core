#!/usr/bin/env python
"""Connects to the mongo CLI using a CyHy configuration.

Usage:
  cyhy-mongo [options] [SECTION]
  cyhy-mongo (-h | --help)
  cyhy-mongo --version

Options:
  -h --help                      Show this screen.
  -p --pretend                   Show the command that would run.
  --version                      Show version.
"""

from __future__ import print_function

import re
import subprocess
import sys

from docopt import docopt

from cyhy.core.config import Config

# Start the mongo command using the parameters from the .cyhy config file

RE = re.compile(
    "mongodb://((?P<username>.*?):(?P<password>.*?)@)?"
    "(?P<hostname>.*?):(?P<port>.*?)/(?P<path>.*)"
)


def main():
    """Connect to a MongoDB server using a CyHy configuration file."""
    args = docopt(__doc__, version="v0.0.1")

    config = Config(args["SECTION"])
    uri_dict = RE.match(config.db_uri).groupdict()
    if uri_dict["username"] and uri_dict["password"]:
        cmd = "mongo --host {} --port {} --authenticationDatabase {} -u {} --password={} {}".format(
            uri_dict["hostname"],
            uri_dict["port"],
            uri_dict["path"],
            uri_dict["username"],
            uri_dict["password"],
            config.db_name,
        )
    else:
        cmd = "mongo --host {} --port {} --authenticationDatabase {} {}".format(
            uri_dict["hostname"], uri_dict["port"], uri_dict["path"], config.db_name
        )

    print("=" * 80, file=sys.stderr)
    print(
        "Active CyHy configuration: {}".format(config.active_section), file=sys.stderr
    )
    if uri_dict["username"]:
        print(
            "Connecting to: {}@{}:{}/{}".format(
                uri_dict["username"],
                uri_dict["hostname"],
                uri_dict["port"],
                config.db_name,
            ),
            file=sys.stderr,
        )
    else:
        print(
            "Connecting to: {!s}:{!s}/{!s}".format(
                uri_dict["hostname"], uri_dict["port"], config.db_name
            ),
            file=sys.stderr,
        )
    print("=" * 80, file=sys.stderr)
    print("", file=sys.stderr)

    if args["--pretend"]:
        print("set +o history")
        print(cmd)
        print("set -o history")
    else:
        subprocess.call(cmd, shell=True)

    # import IPython; IPython.embed() #<<< BREAKPOINT >>>


if __name__ == "__main__":
    main()
