#!/usr/bin/env python
"""Cyber Hygiene system control.

Usage:
  cyhy-control [options] pause [--wait] [--timeout=<seconds>] <sender> <reason>
  cyhy-control [options] list
  cyhy-control [options] delete <id>

  cyhy-control (-h | --help)
  cyhy-control --version

Options:
  -h --help                      Show this screen.
  -s SECTION --section=SECTION   Configuration section to use.
  -t --timeout=<seconds>         Maximum wait time in seconds.  Defaults to forever.
  -q --quiet                     Just the data.
  -w --wait                      Wait for the commander to pause.
  --version                      Show version.
"""

from __future__ import print_function

import sys
import time

from bson import ObjectId
from docopt import docopt

from cyhy.db import database, CHDatabase


def pause_commander(db, sender, reason, wait=False, timeout=None, quiet=False):
    ch = CHDatabase(db)
    doc = ch.pause_commander(sender, reason)
    if quiet:
        print(doc["_id"])
    else:
        print("Command sent with system control document ID: {_id}".format(**doc))
    if wait:
        if not quiet:
            if timeout > 0:
                print(
                    "Waiting up to {} second{} for commander to stop...".format(
                        timeout, ("" if timeout == 1 else "s")
                    )
                )
            else:
                print("Waiting for commander to stop...")
        wait_result = doc.wait(timeout=timeout)
        if not quiet:
            if wait_result:
                print("Commander stopped.")
                print(
                    '  (use "cyhy-control delete {_id}" to resume commander)'.format(
                        **doc
                    )
                )
            else:
                print("Commander DID NOT STOP before the timeout was reached.")
                print(
                    '  (use "cyhy-control delete {_id}" to prevent commander from stopping)'.format(
                        **doc
                    )
                )
        return wait_result
    # always returns True if there is no wait
    return True


def list_control_docs(db, quiet=False):
    docs = db.SystemControlDoc.find()
    if docs.count() == 0:
        if not quiet:
            print("There are currently no system control documents.")
        return False
    if not quiet:
        print("{:<26}{:<18}{:<16}{:}".format("ID", "Time (UTC)", "Sender", "Reason"))
    for doc in docs:
        if not quiet:
            print("{_id:<26}{time:%Y-%m-%d %H:%M  }{sender:<16}{reason}".format(**doc))
        else:
            print(doc["_id"])
    return True


def delete_control_doc(db, doc_id, quiet=False):
    doc = db.SystemControlDoc.find_one({"_id": ObjectId(doc_id)})
    if not doc:
        if not quiet:
            print("Could not find a control document with ID {}".format(doc_id))
        return False
    doc.delete()
    return True


def main():
    args = docopt(__doc__, version="v0.0.1")
    db = database.db_from_config(args["--section"])

    if args["--timeout"]:
        timeout = int(args["--timeout"])
    else:
        timeout = None

    if args["pause"]:
        success = pause_commander(
            db,
            args["<sender>"],
            args["<reason>"],
            args["--wait"],
            timeout,
            args["--quiet"],
        )
    elif args["list"]:
        success = list_control_docs(db, args["--quiet"])
    elif args["delete"]:
        success = delete_control_doc(db, args["<id>"], args["--quiet"])

    if not success:
        sys.exit(-1)


if __name__ == "__main__":
    main()
